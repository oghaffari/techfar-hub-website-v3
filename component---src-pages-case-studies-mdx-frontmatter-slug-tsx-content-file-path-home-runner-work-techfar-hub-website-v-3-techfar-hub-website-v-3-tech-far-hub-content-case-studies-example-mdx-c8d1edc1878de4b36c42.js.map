{"version":3,"file":"component---src-pages-case-studies-mdx-frontmatter-slug-tsx-content-file-path-home-runner-work-techfar-hub-website-v-3-techfar-hub-website-v-3-tech-far-hub-content-case-studies-example-mdx-c8d1edc1878de4b36c42.js","mappings":"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","sources":["webpack://tech-far-hub/./node_modules/@mdx-js/react/lib/index.js","webpack://tech-far-hub/./content/case-studies/example.mdx","webpack://tech-far-hub/./src/pages/case-studies/{mdx.frontmatter__slug}.tsx","webpack://tech-far-hub/./src/components/navigation.tsx","webpack://tech-far-hub/./src/components/footer.tsx","webpack://tech-far-hub/./src/components/layout.tsx"],"sourcesContent":["/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('mdx/types').MDXComponents} Components\n *\n * @typedef Props\n *   Configuration.\n * @property {Components} [components]\n *   Mapping of names for JSX components to React components.\n * @property {boolean} [disableParentContext=false]\n *   Turn off outer component context.\n * @property {ReactNode} [children]\n *   Children.\n *\n * @callback MergeComponents\n * @param {Components} currentComponents\n *   Current components from the context.\n * @returns {Components}\n *   Merged components.\n */\n\nimport React from 'react'\n\n/**\n * @type {import('react').Context<Components>}\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components and\n *   `MDXProvider` to set context based components instead.\n */\nexport const MDXContext = React.createContext({})\n\n/**\n * @param {import('react').ComponentType<any>} Component\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components instead.\n */\nexport function withMDXComponents(Component) {\n  return boundMDXComponent\n\n  /**\n   * @param {Record<string, unknown> & {components?: Components}} props\n   * @returns {JSX.Element}\n   */\n  function boundMDXComponent(props) {\n    const allComponents = useMDXComponents(props.components)\n    return React.createElement(Component, {...props, allComponents})\n  }\n}\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Components|MergeComponents} [components]\n *   Additional components to use or a function that takes the current\n *   components and filters/merges/changes them.\n * @returns {Components}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(() => {\n    // Custom merge via a function prop\n    if (typeof components === 'function') {\n      return components(contextComponents)\n    }\n\n    return {...contextComponents, ...components}\n  }, [contextComponents, components])\n}\n\n/** @type {Components} */\nconst emptyObject = {}\n\n/**\n * Provider for MDX context\n *\n * @param {Props} props\n * @returns {JSX.Element}\n */\nexport function MDXProvider({components, children, disableParentContext}) {\n  let allComponents = useMDXComponents(components)\n\n  if (disableParentContext) {\n    allComponents = components || emptyObject\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    children\n  )\n}\n","/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\"\n  }, _provideComponents(), props.components);\n  return React.createElement(_components.p, null, \"I am an example case study.\");\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/home/runner/work/techfar-hub-website-v3/techfar-hub-website-v3/tech-far-hub/content/case-studies/example.mdx\";\nimport * as React from \"react\";\nimport Layout from '../../components/layout';\nconst CaseStudyPage = _ref => {\n  let {data, children} = _ref;\n  return React.createElement(Layout, null, React.createElement(\"h2\", null, data.mdx.frontmatter.title), children);\n};\nCaseStudyPage\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(CaseStudyPage, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport const Head = () => React.createElement(\"title\", null, \"TechFAR Hub\");\nconst query = \"1484131672\";\n","import * as React from \"react\"\n\nimport { NavDropDownButton, Menu, ExtendedNav, Search } from '@trussworks/react-uswds'\n\ntype onClickHandler = () => void;\n\ninterface iNavigation {\n    isNavExpanded: boolean,\n    onNavExpanded: onClickHandler\n}\nconst Navigation = ({ isNavExpanded, onNavExpanded }: iNavigation) => {\n    const [isOpen, setIsOpen] = React.useState([false, false, false])\n    /**\n     * This toggle function will handle all navigation toggle links\n     *\n     * @param {number} index\n     */\n    const onToggle = (index: number): void => {\n        // The setIsOpen is used to toggle the currently selected nav link\n        setIsOpen((prevIsOpen) => {\n            const newIsOpen = [...isOpen];\n            newIsOpen[index] = !prevIsOpen[index];\n\n            // TODO Implement auto-closing at desktop size, ala j40\n            return newIsOpen;\n        });\n    };\n\n\n    const getStartedSubItems = [\n        <a href=\"#start\">First item</a>\n    ]\n\n    const handbookItems = [\n        <a href=\"#start\">First item</a>\n    ]\n\n    const subMenuItems = [\n        <a href=\"#linkOne\" key=\"one\">\n            Simple link one\n        </a>,\n        <a href=\"#linkTwo\" key=\"two\">\n            Simple link two\n        </a>,\n    ]\n\n    const mainNavItems = [\n        <>\n            <NavDropDownButton\n                onToggle={(): void => {\n                    onToggle(0)\n                }}\n                menuId=\"getStartedDropdown\"\n                isOpen={isOpen[0]}\n                label=\"Get Started\"\n                isCurrent={true}\n            />\n            <Menu\n                key=\"getStarted\"\n                items={getStartedSubItems}\n                isOpen={isOpen[0]}\n            />\n        </>,\n        <>\n            <NavDropDownButton\n                onToggle={(): void => {\n                    onToggle(1)\n                }}\n                menuId=\"learningCenterDropdown\"\n                isOpen={isOpen[1]}\n                label=\"Learning Center\"\n                isCurrent={false}\n            />\n            <Menu\n                key=\"learningCenter\"\n                items={subMenuItems}\n                isOpen={isOpen[1]}\n            />\n        </>,\n\n        <a href=\"#two\" key=\"caseStudies\" className=\"usa-nav__link\">\n            <span>Case Studies</span>\n        </a>,\n        <a href=\"#three\" key=\"samples\" className=\"usa-nav__link\">\n            <span>Samples &amp; Templates</span>\n        </a>,\n        <>\n            <NavDropDownButton\n                onToggle={(): void => {\n                    onToggle(2)\n                }}\n                menuId=\"handbookDropdown\"\n                isOpen={isOpen[2]}\n                label=\"Handbook\"\n                isCurrent={false}\n            />\n            <Menu\n                key=\"handbook\"\n                items={handbookItems}\n                isOpen={isOpen[2]}\n            />\n        </>,\n        <a href=\"#three\" key=\"history\" className=\"usa-nav__link\">\n            <span>History of TFH</span>\n        </a>,\n    ]\n    return (\n        <>\n            <ExtendedNav\n                primaryItems={mainNavItems}\n                secondaryItems={[]}\n                mobileExpanded={isNavExpanded}\n                onToggleMobileNav={onNavExpanded}>\n                <Search onSubmit={() => false} />\n            </ExtendedNav>\n\n        </>\n    )\n\n}\n\nexport default Navigation","import * as React from \"react\"\n\nimport { GridContainer, Grid, FooterNav, SocialLink, SocialLinks } from '@trussworks/react-uswds'\n\nconst Footer = () => {\n    const socialLinks = [\n        <SocialLink key=\"facebook\" name=\"Facebook\" href=\"#\" />,\n        <SocialLink key=\"twitter\" name=\"Twitter\" href=\"#\" />,\n        <SocialLink key=\"youtube\" name=\"YouTube\" href=\"#\" />,\n        <SocialLink key=\"instagram\" name=\"Instagram\" href=\"#\" />,\n    ]\n    return (\n        <footer className=\"usa-footer usa-footer--big\">\n            <GridContainer className=\"usa-footer__return-to-top\">\n                <a href=\"#\">Return to top</a>\n            </GridContainer>\n            <GridContainer>\n                <Grid row gap={4}>\n                    <Grid tablet={{ col: 12 }}>\n                        <Grid row gap={2}>\n                            <Grid tablet={{ col: 2 }}>\n                                <Grid row>\n                                    <img src=\"/images/usds-logo-footer.svg\" alt=\"United States Digital Service\" />\n                                </Grid>\n                                <Grid row>\n                                    U.S. Digital Service\n                                </Grid>\n                            </Grid>\n                            <Grid tablet={{ col: 2 }}>\n                                <FooterNav\n                                    aria-label=\"Footer navigation\"\n                                    size=\"big\"\n                                    links={[\n                                        <a href=\"#\">Nav link 1.1</a>,\n                                        <a href=\"#\">Nav link 1.1</a>\n\n                                    ]}\n                                />\n                            </Grid>\n                            <Grid tablet={{ col: 2 }}>\n                                <FooterNav\n                                    aria-label=\"Footer navigation\"\n                                    size=\"big\"\n                                    links={[\n                                        <a href=\"#\">Nav link 2.1</a>,\n                                        <a href=\"#\">Nav link 2.1</a>\n\n                                    ]}\n                                />\n\n                            </Grid>\n                            <Grid tablet={{ col: 2 }}>\n                                <FooterNav\n                                    aria-label=\"Footer navigation\"\n                                    size=\"big\"\n                                    links={[\n                                        <a href=\"#\">Nav link 3.1</a>,\n                                        <a href=\"#\">Nav link 3.1</a>\n\n                                    ]}\n                                />\n\n                            </Grid>\n                            <Grid tablet={{ col: 3 }}>\n                                <Grid row className=\"usa-footer__social-heading\">\n                                    <strong>Follow USDS</strong>\n                                </Grid>\n                                <Grid row>\n                                    <SocialLinks links={socialLinks} />\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </GridContainer>\n        </footer>\n    )\n}\n\nexport default Footer;","import * as React from \"react\"\nimport { ReactNode } from 'react'\nimport '@trussworks/react-uswds/lib/uswds.css'\nimport '@trussworks/react-uswds/lib/index.css'\nimport './tfh.scss'\n\nimport { GovBanner, GridContainer, Grid, Header, Title, NavMenuButton } from '@trussworks/react-uswds'\nimport Navigation from \"./navigation\"\nimport Footer from \"./footer\"\n\ninterface ILayoutProps {\n    children: ReactNode,\n}\n\n\nconst Layout = ({ children }: ILayoutProps) => {\n    const [navExpanded, setNavExpanded] = React.useState(false);\n    const onNavExpand = (): void => setNavExpanded((prvExpanded) => !prvExpanded)\n\n\n\n    return (\n        <>\n            <GovBanner />\n            <Header extended={true}>\n                <div className=\"usa-navbar\">\n                    <Title>TechFAR Hub\n                        {/* TODO: Replace with a real component and not inline styles */}\n                        <em style={{ display: 'block', fontSize: '50%', fontWeight: 'normal', }}>an initiative of US Digital Service</em>\n\n                    </Title>\n                    <NavMenuButton onClick={onNavExpand} label=\"Menu\" />\n                </div>\n                <Navigation isNavExpanded={navExpanded} onNavExpanded={onNavExpand} />\n            </Header>\n\n            <main id=\"main-content\">\n                <GridContainer>\n                    <Grid row>\n                        <Grid col=\"fill\">\n                            {children}\n                        </Grid>\n                    </Grid>\n                </GridContainer>\n            </main>\n            <Footer />\n        </>\n    )\n}\n\nexport default Layout\n"],"names":["MDXContext","useMDXComponents","components","contextComponents","_createMdxContent","props","_components","Object","assign","p","_provideComponents","React","wrapper","MDXLayout","CaseStudyPage","_ref","data","children","Layout","mdx","frontmatter","title","GatsbyMDXWrapper","GATSBY_COMPILED_MDX","Head","isNavExpanded","onNavExpanded","isOpen","setIsOpen","onToggle","index","prevIsOpen","newIsOpen","getStartedSubItems","href","handbookItems","subMenuItems","key","mainNavItems","NavDropDownButton","menuId","label","isCurrent","Menu","items","className","ExtendedNav","primaryItems","secondaryItems","mobileExpanded","onToggleMobileNav","Search","onSubmit","socialLinks","SocialLink","name","GridContainer","Grid","row","gap","tablet","col","src","alt","FooterNav","size","links","SocialLinks","navExpanded","setNavExpanded","onNavExpand","prvExpanded","GovBanner","Header","extended","Title","style","display","fontSize","fontWeight","NavMenuButton","onClick","Navigation","id","Footer"],"sourceRoot":""}